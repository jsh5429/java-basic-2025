package chapter02;

//캡슐화 : 인스턴스 필드와 메서드를 하나로 묶어서 필드에 대한 조작을 메서들를 통해서만 하도록 하는 것
//정보 은닉과 데이터 보호, 데이터 무결성을 보장할 수 있다.

// Entity : 데이터베이스의 레코드를 관리하는 객체
// (생성자와 Getter 만 유지)
// DTO (Data Transfer Object) : 데이터 전송을 위한 객체
// (불변성 : 생성자와 Getter 만 유지)
class Player {
	private String name;
	private String team;
	private String birth;
	private int number;
	
	Player(String name, String team, String birth, int number){
		this.name = name;
		this.team = team;
		this.birth = birth;
		this.number = number < 0 ? 0 : number;
		
	}
	// getter 메서드 : 캡슐화에서 private 필드의 값을 반환하는 메서드
	String getTeam() {
		return team;
	}
	String getName() {
		return name;
	}
	String getBirth() {
		return birth;
	}
	int getNumber() {
		return number;
	}
	// setter 메서드 : 캡슐화에서 private 필드의 값을 변경하는 메서드
	void setName(String name) {
		this.name = name;
	}
	void setTeam(String team) {
		this.team = team;
	}
	void setBirth(String birth) {
		this.birth = birth;
	}
	void setNumber(int number) {
		this.number = number < 0 ? 0 : number;
	}
}

public class G_Encapsulation {

	public static void main(String[] args) {
		Player player1 = new Player("이성계", "조선", "1335-", 1);
		System.out.println(player1.getName());
		System.out.println(player1.getNumber());
		
		player1.setTeam("고려");
		System.out.println(player1.getTeam());
		
		
	}

}
