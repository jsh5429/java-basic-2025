package chapter02;

//  생성자(Constructor) : 클래스의 인스턴스가 생성되는 순간에 호출되는 메서드
// 클래스와 같은 이름을 가짐, 반환타입이 존재하지 않음.
// 클래명(매개변수, ...) { 인스턴스가 생성될 때 수행할 작업 }
class Human1{
	String name;
	int age;
	String gender;
	
	// final로 선언된 인스턴스 변수는 생성자에서 반드시 초기화 해야한다.
	// 즉, 필수 값 (required)
	final String address;
	int[] numbers;
	
	// 만약 다른 생성자(매개변수가 존재하는 생성자)만 존재 한다면
	// 기본 생성자는 자동으로 생성되지 않음.
	Human1() {
		// 1. 인스턴스를 생성할 때 특정 작업을 수행하고 싶을 때
		System.out.println("Human1의 인스턴스가 생성됩니다.");
		
		// 2. *인스턴스를 생성과 동시에 인스턴스 변수를 초기화 하고 싶을 때
		// 의존성을 내부에서 주입하는 행위.
		// 클래스 객체를 만드는 순간에 무슨 속성을 가질지 정해버리는 행위.
		name = "홍길동";
		age = 20;
		gender = "남";
		address = "부산";
	}
	
	Human1(String name1){
		name = name1;
		age = 20;
		gender = "남";
		address = "부산";
	}
	
	Human1(String name1, int age1, String gender1, String address1){
		//의존성을 모두 외부에서 주입하는 행위
		name = name1;
		age = age1;
		gender = gender1;
		address = address1;
		numbers = new int[] {1,2,3};
	}
	
	// 자주 쓰는 방식
	Human1(Human1 human){
		name = human.name;
		age = human.age;
		gender = human.gender;
		address = human.address;
	}
	
}
public class D_Constructor {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		// 기본 생성자
		// 만약 클래스에 생성자를 정의하지 않으면
		// 컴파일러가 알아서 자동으로 기본 생성자를 제공함.
		Human1 human1 = new Human1();
		human1.name = "이성계";
		human1.age = 60;
		human1.gender = "남";
		
		Human1 human2 = new Human1();
		System.out.println(human2.name);
		
		Human1 human3 = new Human1("이성계");
		System.out.println(human3.name);
		
		Human1 human4 = new Human1("이방과", 30, "여", "부산");
		System.out.println(human4.name);
		System.out.println(human4.age);
		System.out.println(human4.gender);
		
		// 주소만 복사되는 형태( 독립적이지 않음. )
		Human1 human5 = human4;
		// 새로운 주소를 생성해서 값을 복사하는 형태 (독립적
		Human1 human6 = new Human1(human4);
		
		human4.numbers[0] = 99;
		System.out.println(human4.numbers[0]);
		System.out.println(human6.numbers[0]);

	}

}
